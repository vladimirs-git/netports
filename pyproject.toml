[tool.poetry]
name = "netports"
version = "0.12.0"
description = "Python tools for managing ranges of VLANs, TCP/UDP ports, IP protocols, Interfaces"
authors = ["Vladimirs Prusakovs <vladimir.prusakovs@gmail.com>"]
readme = "README.rst"
license = "Apache-2.0"
homepage = "https://github.com/vladimirs-git/netports"
repository = "https://github.com/vladimirs-git/netports"
keywords = ["networking", "port", "range", "tcp", "udp", "vlan", "ip"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Topic :: System :: Networking",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.8",
    "Natural Language :: English",
]

[tool.poetry.dependencies]
python = "^3.8"

[tool.poetry.group.dev.dependencies]
dictdiffer = "^0.9.0"
mypy = "^1.6.1"
pygments = "^2.16.1"
pylint = "^3.0.1"
pytest = "^7.4.2"
pytest-cov = "^4.1.0"
pytest-mock = "^3.12.0"
readthedocs-sphinx-search = "^0.3.1"
requests-mock = "^1.11.0"
restructuredtext-lint = "^1.4.0"
ruff = "^0.1.6"
sphinx = "7.1.2"
sphinx-rtd-theme = "^1.3.0"
sphinxnotes-strike = "^1.2"
twine = "^4.0.2"
types-pyyaml = "^6.0.12.12"
types-requests = "^2.31.0.9"
types-tabulate = "^0.9.0.3"
typing-extensions = "^4.8.0"
vhelpers = "^0.1.14"

[tool.setuptools.package-data]
netports = ["py.typed"]

[tool.poetry.extras]
test = ["pytest"]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/vladimirs-git/netports/issues"
"Download URL" = "https://github.com/vladimirs-git/netports/archive/refs/tags/0.12.0.tar.gz"

[tool.mypy]
python_version = "3.8"

[tool.ruff]
exclude = [
    ".git",
    ".idea",
    ".mypy_cache",
    ".pytype",
    ".ruff_cache",
    ".venv",
    "_notes",
    "dist",
    "examples",
    "temp",
    "tmp",
    "venv",
]
line-length = 100
indent-width = 4
target-version = "py38"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false  # arguments on separate lines
line-ending = "auto"

[tool.ruff.lint.pydocstyle]
convention = "pep257"  # docstring style

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
